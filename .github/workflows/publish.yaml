name: Publish

on:
  push:
    branches: ['main']
  

permissions:
  id-token: write

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Yarn cache
        uses: actions/cache@v4
        env:
          cache-name: yarn-cache
        with:
          path: ~/.yarn/berry/cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Set up .yarn/releases directory
        run: |
          mkdir -p .yarn/releases
          curl -o .yarn/releases/yarn-4.2.2.cjs https://repo.yarnpkg.com/4.2.2/packages/yarnpkg-cli/bin/yarn.js

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn --immutable

      - name: build types
        run: yarn run tsc --project tsconfig.build.json

      - name: Generate archive
        run: yarn pack --filename ./src/package.tgz

      - name: Publish with latest tag
        if: github.event.release.prelease == false
        run: npm publish package.tgz --tag latest --provenance
        working-directory: src
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Publish with next tag
      #   if: github.event.release.prelease == true
      #   run: npm publish package.tgz --tag next --provenance
      #   working-directory: src
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}